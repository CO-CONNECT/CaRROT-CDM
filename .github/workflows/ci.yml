name: co-coconnect-tools
on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.6.8]
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version:  ${{ matrix.python-version }}
      - uses: actions/checkout@v2
      - run: ls .
      - name: Install setuptools
        run: pip3 install setuptools
      - name: Install co-connect-tools
        run:  pip3 install -e .
      - run: coconnect --help
  unit_test_1:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6.8]
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    needs: build
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.6.8
      - uses: actions/checkout@v2
      - run: ls .
      - name: Install setuptools
        run: pip3 install setuptools
      - name: Install co-connect-tools
        run:  pip3 install -e .
      - run: coconnect display json example/sample_config/lion_structural_mapping.json
      - run: coconnect map make --name Lion --register  example/sample_config/lion_structural_mapping.json
      - run: coconnect map list
      - run: coconnect map run --name Lion example/sample_input_data/*.csv
      - uses: actions/upload-artifact@v2
        with:
          name: outputs
          path: output_data
          retention-days: 1
  unit_test_2:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6.8]
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    needs: build
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.6.8
      - uses: actions/checkout@v2
      - run: ls .
      - name: Install setuptools
        run: pip3 install setuptools
      - name: Install co-connect-tools
        run:  pip3 install -e .
      - run: |
          COCONNECT_DATA_FOLDER=$(coconnect info data_folder)
          etlcdm.py -i $COCONNECT_DATA_FOLDER/test/inputs/*.csv --rules $COCONNECT_DATA_FOLDER/test/rules/rules_14June2021.json -o tests/
      - run: |
          for filename in tests/*.csv; do
               fname=${filename##*/}
               if [[ -z $(coconnect map diff $filename coconnect/data/test/expected_outputs/$fname) ]];
               then
                  echo "$fname is good"
               else
                  echo "$fname failed!"
                  coconnect map diff $filename coconnect/data/test/expected_outputs/$fname
                  exit
               fi
          done

      - uses: actions/upload-artifact@v2
        with:
          name: test
          path: tests
          retention-days: 1
  unit_test_3:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.6.8]
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    needs: build
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.6.8
      - uses: actions/checkout@v2
      - run: ls .
      - name: Install setuptools
        run: pip3 install setuptools
      - name: Install co-connect-tools
        run:  pip3 install -e .
      - run: |
          coconnect info data_folder > temp.txt
      -run: |
          set /p COCONNECT_DATA_FOLDER=<temp.txt
          echo %COCONNECT_DATA_FOLDER%
      - run: |
          etlcdm.py -i %COCONNECT_DATA_FOLDER%\test\inputs\*.csv --rules %COCONNECT_DATA_FOLDER%\test\rules\rules_14June2021.json -o tests
      - uses: actions/upload-artifact@v2
        with:
          name: test
          path: tests
          retention-days: 1
  pypi:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.6.8
      - run: pip3 install wheel
      - uses: actions/checkout@v2
      - run:  |
         echo "__version__ = '${GITHUB_REF#refs/*/}'" > coconnect/_version.py
         cat coconnect/_version.py
         python3 setup.py sdist bdist_wheel
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_KEY }}
